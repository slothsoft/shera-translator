<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>shera-webapp</artifactId>
	<packaging>jar</packaging>

	<parent>
		<groupId>de.slothsoft.shera</groupId>
		<artifactId>shera-build</artifactId>
		<version>0.3.0</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>de.slothsoft.shera</groupId>
			<artifactId>shera-core</artifactId>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/webapp</sourceDirectory>


		<plugins>
		
			<!-- Replace broken Regex with fixed one -->
		
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>maven-replacer-plugin</artifactId>
				<executions>
					<execution>
						<id>replace-bad-regex</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<file>src/main/webapp/bundle.js</file>
					<replacements>
						<replacement>
							<token>\"\\\\s\+\"</token>
							<value>/\\s+/</value>
						</replacement>
					</replacements>
				</configuration>
			</plugin>
			
			<!-- Didn't work, so I gave up =/
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jsSrcDir>src/main/webapp/lib</jsSrcDir>
					<jsTestSrcDir>src/test/webapp/lib</jsTestSrcDir>
				</configuration>
			</plugin>

			-->

			<!-- This plug-in takes the big JavaScipt file from the webapp folder 
				and minimizes it. -->

			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-minify</id>
						<phase>package</phase>
						<configuration>
							<charset>${project.build.sourceEncoding}</charset>
							<webappTargetDir>${project.build.directory}/${finished-js-folder}</webappTargetDir>
							<nosuffix>true</nosuffix>
							<skipMerge>true</skipMerge>
							<jsEngine>CLOSURE</jsEngine>
							
							<!-- JavaScript sources -->
							<jsSourceDir>/</jsSourceDir>
							<jsIncludes>**/*.js</jsIncludes>
							<jsExcludes>
								<jsExcludes>.tsc-rootfile.js</jsExcludes>
								<!-- TODO: doesn't work right now -->
								<jsExcludes>lib/phonetic-sound*.js</jsExcludes>
							</jsExcludes>
							
							<!-- CSS sources -->
							<cssSourceDir>style/</cssSourceDir>
							<cssIncludes>**/*.css</cssIncludes>
						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- This copies the file that couldn't be minified -->
			
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-broken-files</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/${finished-js-folder}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>lib/phonetic-sound*.js</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- Copy the HTML page(s) and images in the webapp folder -->

					<execution>
						<id>copy-html</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/${finished-js-folder}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>**/*.html</include>
										<include>**/*.png</include>
										<include>**/*.svg</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>