<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>shera-release</artifactId>
	<packaging>pom</packaging>

	<description>This project is just for creating a beautiful ZIP file with the JAR, the webapp and possibly a README file. Let's see how that goes...</description>

	<parent>
		<groupId>de.slothsoft.shera</groupId>
		<artifactId>shera-build</artifactId>
		<version>0.3.0</version>
	</parent>

	<properties>
		<release-folder>${basedir}/target/release</release-folder>
		<webapp-folder>${release-folder}/webapp</webapp-folder>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.slothsoft.shera</groupId>
			<artifactId>shera-javaapp</artifactId>
		</dependency>
		<dependency>
			<groupId>de.slothsoft.shera</groupId>
			<artifactId>shera-webapp</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- This is the base configuration for all uploads -->

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<configuration>
						<serverId>slothsoft.de</serverId>
						<fromDir>${webapp-folder}</fromDir>
						<url>ftp://slothsoft.de/htdocs/app/</url>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<!-- Copy the runnable JAR over so we can put it into the ZIP -->

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-javaapp</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${release-folder}</outputDirectory>
							<resources>
								<resource>
									<directory>../javaapp/target/</directory>
									<include>${runnable-jar-name}.jar</include>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- Copy the webapp over there so we can ZIP it -->

					<execution>
						<id>copy-webapp</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${webapp-folder}</outputDirectory>
							<resources>
								<resource>
									<directory>../webapp/target/${finished-js-folder}</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<exclude>.tsc-rootfile.js</exclude>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- Copy the LICENSE file -->

					<execution>
						<id>copy-license</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${release-folder}/</outputDirectory>
							<resources>
								<resource>
									<directory>../</directory>
									<includes>
										<include>LICENSE</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>

					<!-- And now we get the HTML Readme file and put it in there too -->

					<execution>
						<id>copy-readme</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/</outputDirectory>
							<resources>
								<resource>
									<directory>../</directory>
									<includes>
										<include>README.md</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.ruleoftech</groupId>
				<artifactId>markdown-page-generator-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputDirectory>${project.build.directory}/</inputDirectory>
							<outputDirectory>${release-folder}/</outputDirectory>
							<headerHtmlFile>${basedir}/header.html</headerHtmlFile>
							<footerHtmlFile>${basedir}/footer.html</footerHtmlFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Now that we have everything, create a ZIP file -->

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>zip.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
			</plugin>

			<!-- Manually deploy webapp to the development server -->

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>wagon-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>upload-webapp-to-dev</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
						<configuration>
							<toDir>shera-dev/</toDir>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>upload-release</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Upload the finished release as well -->
		
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>upload-webapp</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<toDir>shera/</toDir>
								</configuration>
							</execution>
							<execution>
								<id>upload-webapp-old</id>
								<phase>deploy</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<toDir>shera/${project.version}</toDir>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>